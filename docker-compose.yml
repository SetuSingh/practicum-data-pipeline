services:
  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: practicum-zookeeper
    platform: linux/amd64
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2182:2181"

  # Kafka for messaging
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: practicum-kafka
    platform: linux/amd64
    depends_on:
      - zookeeper
    ports:
      - "9093:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"

  # Spark for Batch Processing
  spark-master:
    image: bitnami/spark:3.4.1
    container_name: practicum-spark-master
    platform: linux/amd64
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8080:8080"
      - "7077:7077"
    volumes:
      - ./src:/opt/spark-apps
      - ./data:/opt/spark-data

  spark-worker:
    image: bitnami/spark:3.4.1
    container_name: practicum-spark-worker
    platform: linux/amd64
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
    volumes:
      - ./src:/opt/spark-apps
      - ./data:/opt/spark-data
    depends_on:
      - spark-master

  # Apache Storm for Stream Processing - Using ARM64 compatible image for M3 Pro
  nimbus:
    image: arm64v8/storm:latest
    container_name: practicum-storm-nimbus
    command: storm nimbus
    depends_on:
      - zookeeper
    ports:
      - "6627:6627"
    volumes:
      - ./src:/storm-apps
      - ./data:/storm-data

  supervisor:
    image: arm64v8/storm:latest
    container_name: practicum-storm-supervisor
    command: storm supervisor
    depends_on:
      - nimbus
      - zookeeper
    volumes:
      - ./src:/storm-apps
      - ./data:/storm-data

  storm-ui:
    image: arm64v8/storm:latest
    container_name: practicum-storm-ui
    command: storm ui
    depends_on:
      - nimbus
    ports:
      - "8084:8080"

  # Flink for Hybrid Processing
  flink-jobmanager:
    image: flink:1.17.1-scala_2.12
    container_name: practicum-flink-jobmanager
    platform: linux/amd64
    ports:
      - "8082:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        parallelism.default: 2
    volumes:
      - ./src:/opt/flink/apps
      - ./data:/opt/flink/data

  flink-taskmanager:
    image: flink:1.17.1-scala_2.12
    container_name: practicum-flink-taskmanager
    platform: linux/amd64
    depends_on:
      - flink-jobmanager
    command: taskmanager
    scale: 1
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 2
        parallelism.default: 2
    volumes:
      - ./src:/opt/flink/apps
      - ./data:/opt/flink/data

  # PostgreSQL for metadata and compliance data
  postgres:
    image: postgres:15
    container_name: practicum-postgres
    platform: linux/amd64
    environment:
      POSTGRES_DB: compliance_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: practicum-prometheus
    platform: linux/amd64
    ports:
      - "9090:9090"
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:10.1.0
    container_name: practicum-grafana
    platform: linux/amd64
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  postgres_data:
  grafana_data:
